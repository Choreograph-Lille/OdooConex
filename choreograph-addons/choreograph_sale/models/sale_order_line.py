# -*- coding: utf-8 -*-

from odoo import api, Command, fields, models, _


class SaleOrderLine(models.Model):
    _inherit = "sale.order.line"

    def _create_project_from_template(self, values, template):
        values['name'] = "%s - %s" % (values['name'], template.name)
        # The no_create_folder context key is used in documents_project
        project = template.with_context(no_create_folder=True).copy(values)
        project.tasks.write({
            'sale_line_id': self.id,
            'partner_id': self.order_id.partner_id.id,
            'email_from': self.order_id.partner_id.email,
        })
        # duplicating a project doesn't set the SO on sub-tasks
        project.tasks.filtered('parent_id').write({
            'sale_line_id': self.id,
            'sale_order_id': self.order_id.id,
        })
        return project

    def _timesheet_create_project(self):
        """ Generate project for the given so line, and link it.
            :param project: record of project.project in which the task should be created
            :return task: record of the created task
        """
        self.ensure_one()
        values = self._timesheet_create_project_prepare_values()
        if self.product_id.project_template_id:
            project = self._create_project_from_template(values, self.product_id.project_template_id)
        else:
            if self.order_id.operation_type:
                # create project from order's project template
                project = self._create_project_from_template(values, self.order_id.operation_type)
            else:
                project_only_sol_count = self.env['sale.order.line'].search_count([
                    ('order_id', '=', self.order_id.id),
                    ('product_id.service_tracking', 'in', ['project_only', 'task_in_project']),
                ])
                if project_only_sol_count == 1:
                    values['name'] = "%s - [%s] %s" % (values['name'], self.product_id.default_code, self.product_id.name) if self.product_id.default_code else "%s - %s" % (values['name'], self.product_id.name)
                # The no_create_folder context key is used in documents_project
                project = self.env['project.project'].with_context(no_create_folder=True).create(values)

        # Avoid new tasks to go to 'Undefined Stage'
        if not project.type_ids:
            project.type_ids = self.env['project.task.type'].create({'name': _('New')})

        # link project as generated by current so line
        self.write({'project_id': project.id})
        return project
